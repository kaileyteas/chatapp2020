{"ast":null,"code":"import _slicedToArray from \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { db } from './db';\nimport NamePicker from './namePicker';\n\nfunction App() {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1]; // useEffect means the code will run once... i think.\n\n\n  useEffect(() => {\n    db.listen({\n      receive: m => setMessages(current => [m, ...current])\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\",\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), \"Fresh memes\", React.createElement(NamePicker, {\n    onSave: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    classname: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, messages.map((m, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"message-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", m));\n  })), React.createElement(TextInput, {\n    onSend: text => {\n      setMessages([text, ...messages]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nfunction TextInput(props) {\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        text = _useState6[0],\n        setText = _useState6[1];\n\n  return React.createElement(\"div\", {\n    className: \"text-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: text,\n    className: \"text-input\",\n    placeholder: \"Enter text\",\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      props.onSend(text);\n      setText('');\n    },\n    className: \"button\",\n    disabled: !text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u2191\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/App.js"],"names":["React","useState","useEffect","db","NamePicker","App","messages","setMessages","name","setName","listen","receive","m","current","map","i","text","TextInput","props","setText","e","target","value","onSend"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,SAASC,GAAT,GAAe;AACb;AACA;AAFa,oBAGmBJ,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,QAGNK,QAHM;AAAA,QAGIC,WAHJ;;AAAA,qBAIWN,QAAQ,CAAC,EAAD,CAJnB;AAAA;AAAA,QAINO,IAJM;AAAA,QAIAC,OAJA,kBAMb;;;AACAP,EAAAA,SAAS,CAAC,MAAI;AACZC,IAAAA,EAAE,CAACO,MAAH,CAAU;AACRC,MAAAA,OAAO,EAAEC,CAAC,IACRL,WAAW,CAACM,OAAO,IAAG,CAACD,CAAD,EAAI,GAAGC,OAAP,CAAX;AAFL,KAAV;AAID,GALQ,EAKN,EALM,CAAT;AAOA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,gEAAT;AACA,IAAA,SAAS,EAAC,MADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,iBAOE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAIJ,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFK,EAYL;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACQ,GAAT,CAAa,CAACF,CAAD,EAAGG,CAAH,KAAO;AACnB,WAAO;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2BH,CAA3B,CADK,CAAP;AAGD,GAJA,CADH,CAZK,EAsBL,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAGI,IAAD,IAAQ;AACzBT,MAAAA,WAAW,CAAC,CAACS,IAAD,EAAO,GAAGV,QAAV,CAAD,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBK,CAAP;AA2BD;;AAED,SAASW,SAAT,CAAmBC,KAAnB,EAAyB;AAAA,qBACCjB,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAChBe,IADgB;AAAA,QACVG,OADU;;AAGvB,SAAO;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AACE,IAAA,KAAK,EAAEH,IADT;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,WAAW,EAAC,YAHd;AAIE,IAAA,QAAQ,EAAEI,CAAC,IAAGD,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAOL;AAAQ,IAAA,OAAO,EAAE,MAAK;AACpBJ,MAAAA,KAAK,CAACK,MAAN,CAAaP,IAAb;AACAG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACC,KAHH;AAIE,IAAA,SAAS,EAAC,QAJZ;AAKE,IAAA,QAAQ,EAAE,CAACH,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPK,CAAP;AAkBD;;AAED,eAAeX,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {db} from './db'\nimport NamePicker from './namePicker'\n\n\nfunction App() {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  const [messages, setMessages] = useState([])\n  const [name, setName] = useState('')\n\n  // useEffect means the code will run once... i think.\n  useEffect(()=>{\n    db.listen({\n      receive: m=> \n        setMessages(current=> [m, ...current]), \n    })\n  }, [])\n\n  return <main>\n    \n    <header className=\"header\"> \n      <div className=\"logo-wrap\">\n        <img src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\" \n        className=\"logo\"\n        />\n      </div>\n      Fresh memes\n      <NamePicker onSave = {setName}/>\n    </header>\n    {/* returning HTML for a new message that is being sent to the chat */}\n    <div classname=\"messages\">\n      {messages.map((m,i)=>{\n        return <div key={i} className=\"message-wrap\">\n          <div className=\"message\"> {m}</div>\n        </div>\n      })}\n    </div>\n\n    {/* messages -- the text we send to textinput*/}\n    {/* the ... implies that we will append all new messages to the beginning of the list */}\n    <TextInput onSend={(text)=>{\n      setMessages([text, ...messages])\n    }}/>\n\n  </main>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  return <div className=\"text-input-wrap\">\n    <input \n      value={text}\n      className=\"text-input\"\n      placeholder=\"Enter text\"\n      onChange={e=> setText(e.target.value)}\n    />\n    <button onClick={()=> {\n      props.onSend(text)\n      setText('')\n      }}\n      className=\"button\"\n      disabled={!text}\n    >\n    â†‘\n    </button>\n\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}