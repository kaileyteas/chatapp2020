{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import{db,useDB}from'./db';import NamePicker from'./namePicker';import{BrowserRouter,Route}from'react-router-dom';import{FiSend,FiCamera}from'react-icons/fi';import Camera from'react-snap-pic';import*as firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/storage\";import\"./media.css\";function App(){{/* This redirects the user to a localhost page called 'home' */}useEffect(function(){var pathname=window.location.pathname;if(pathname.length<2)window.location.pathname='home';},[]);return React.createElement(BrowserRouter,null,React.createElement(Route,{path:\"/:room\",component:Room}));}function Room(props){// in usestate, we set messages to an empty array to show messages\n// while setMesages is a function\n// const [messages, setMessages] = useState([])\nvar room=props.match.params.room;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showCamera=_useState4[0],setShowCamera=_useState4[1];var messages=useDB(room);/** This is a asynchronous method, meaning that it will wait until prompted\n   *  You can use the wait method with async functions, but without declaring async,\n   *  it will not work.\n   */function takePicture(img){var imgID,storageRef,ref;return _regeneratorRuntime.async(function takePicture$(_context){while(1){switch(_context.prev=_context.next){case 0:setShowCamera(false);imgID=Math.random().toString(36).substring(7);storageRef=firebase.storage().ref();ref=storageRef.child(imgID+'.jpg');_context.next=6;return _regeneratorRuntime.awrap(ref.putString(img,'data_url'));case 6:db.send({img:imgID,name:name,ts:new Date(),room:room});case 7:case\"end\":return _context.stop();}}});}return React.createElement(\"main\",null,showCamera&&React.createElement(Camera,{takePicture:takePicture}),React.createElement(\"header\",{className:\"header\"},React.createElement(\"div\",{className:\"logo-wrap\"},React.createElement(\"img\",{src:\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\",className:\"logo\"})),\"Fresh memes\",React.createElement(NamePicker,{onSave:setName})),React.createElement(\"div\",{className:\"messages\"},messages.map(function(m,i){return React.createElement(Message,{key:i,m:m,name:name});})),React.createElement(TextInput,{showCamera:function showCamera(){return setShowCamera(true);},onSend:function onSend(text){db.send({text:text,name:name,ts:new Date(),room:room});}}));}var bucket='https://firebasestorage.googleapis.com/v0/b/chatroom-e34eb.appspot.com/o/';var suffix='.jpg?alt=media';function Message(_ref){var m=_ref.m,name=_ref.name;return React.createElement(\"div\",{className:\"message-wrap\",from:m.name===name?'me':'you',onClick:function onClick(){return console.log(m);}},React.createElement(\"div\",{className:\"message\"},React.createElement(\"div\",{className:\"msg-name\"},m.name),React.createElement(\"div\",{className:\"msg-text\"},m.text,m.img&&React.createElement(\"img\",{src:bucket+m.img+suffix,alt:\"pic\"}))));}function TextInput(props){var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),text=_useState6[0],setText=_useState6[1];return React.createElement(\"div\",{className:\"text-input-wrap\"},React.createElement(\"button\",{onClick:props.showCamera,style:{left:10,right:'auto'}},React.createElement(FiCamera,{style:{height:15,width:15}})),React.createElement(\"input\",{value:text,className:\"text-input\",placeholder:\"Enter text\",onChange:function onChange(e){return setText(e.target.value);},onKeyPress:function onKeyPress(e){if(e.key==='Enter'){if(text)props.onSend(text);setText('');}}}),React.createElement(\"button\",{onClick:function onClick(){props.onSend(text);setText('');},className:\"button\",disabled:!text},\"\\u2191\"));}export default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/src/App.js"],"names":["React","useState","useEffect","db","useDB","NamePicker","BrowserRouter","Route","FiSend","FiCamera","Camera","firebase","App","pathname","window","location","length","Room","props","room","match","params","name","setName","showCamera","setShowCamera","messages","takePicture","img","imgID","Math","random","toString","substring","storageRef","storage","ref","child","putString","send","ts","Date","map","m","i","text","bucket","suffix","Message","console","log","TextInput","setText","left","right","height","width","e","target","value","key","onSend"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { db, useDB } from './db'\nimport NamePicker from './namePicker'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { FiSend, FiCamera } from 'react-icons/fi'\nimport Camera from 'react-snap-pic'\nimport * as firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\nimport \"./media.css\"\n\nfunction App(){\n  {/* This redirects the user to a localhost page called 'home' */}\n  useEffect(()=>{\n    const {pathname} = window.location\n    if(pathname.length<2) window.location.pathname='home'\n  },[])\n\n  return <BrowserRouter>\n    <Route path=\"/:room\" component={Room}/>\n  </BrowserRouter>\n}\n\nfunction Room(props) {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  // const [messages, setMessages] = useState([])\n  const {room} = props.match.params\n  const [name, setName] = useState('')\n  const [showCamera, setShowCamera] = useState(false)\n  const messages = useDB(room)\n\n  /** This is a asynchronous method, meaning that it will wait until prompted\n   *  You can use the wait method with async functions, but without declaring async,\n   *  it will not work.\n   */\n  async function takePicture(img) {\n    setShowCamera(false)\n    const imgID = Math.random().toString(36).substring(7)\n    var storageRef = firebase.storage().ref()\n    var ref = storageRef.child(imgID + '.jpg')\n    await ref.putString(img, 'data_url')\n    db.send({ img: imgID, name, ts: new Date(), room })\n  }\n\n  return <main>\n    \n    {showCamera && <Camera takePicture={takePicture} />}\n\n    <header className=\"header\"> \n      <div className=\"logo-wrap\">\n        <img src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\" \n        className=\"logo\"\n        />\n      </div>\n      Fresh memes\n      <NamePicker onSave = {setName}/>\n    </header>\n    \n    {/* returning HTML for a new message that is being sent to the chat */}\n    <div className=\"messages\">\n      {messages.map((m,i)=> <Message key={i} m={m} name={name}/>)}\n    </div>\n\n    {/* messages -- the text we send to textinput*/}\n    {/* the ... implies that we will append all new messages to the beginning of the list */}\n    <TextInput \n      showCamera={()=>setShowCamera(true)}\n      onSend={(text)=>{\n        db.send({\n          text, name, ts: new Date(), room\n      })\n    }}/>\n\n  </main>\n}\n\nconst bucket = 'https://firebasestorage.googleapis.com/v0/b/chatroom-e34eb.appspot.com/o/'\nconst suffix = '.jpg?alt=media'\n\nfunction Message({m, name}){\n  return <div className=\"message-wrap\"\n    from={m.name===name?'me':'you'}\n    onClick={()=>console.log(m)}>\n    <div className=\"message\">\n      <div className=\"msg-name\">{m.name}</div>\n      <div className=\"msg-text\">{m.text}\n      {m.img && <img src={bucket + m.img + suffix} alt=\"pic\"/>}</div>\n    </div>\n  </div>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  return <div className=\"text-input-wrap\">\n    <button onClick={props.showCamera}\n      style={{left:10, right:'auto'}}>\n      <FiCamera style={{height:15, width:15}} />\n    </button>\n    <input \n      value={text}\n      className=\"text-input\"\n      placeholder=\"Enter text\"\n      onChange={e=> setText(e.target.value)}\n      onKeyPress={e=> {\n        if(e.key==='Enter') {\n          if(text) props.onSend(text)\n          setText('')\n        }\n      }}\n    />\n    <button onClick={()=> {\n      props.onSend(text)\n      setText('')\n      }}\n      className=\"button\"\n      disabled={!text}\n    >\n    ↑\n    </button>\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}