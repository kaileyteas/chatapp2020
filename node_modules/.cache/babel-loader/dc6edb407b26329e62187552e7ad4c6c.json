{"ast":null,"code":"import _slicedToArray from \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/namePicker.js\";\nimport React, { useState } from 'react';\nimport { FiUser, FiUserCheck, FiSave } from \"react-icons/fi\";\n\nfunction NamePicker(props) {\n  {\n    /* function useState() requires an import line */\n  }\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showName = _useState4[0],\n        setShowName = _useState4[1];\n\n  const inputEl = {\n    /* we this to false because you want to show the state only when there's an input */\n  };\n\n  function save() {\n    inputEl.current.focus();\n\n    if (name && !showName) {\n      props.onSave(name);\n    }\n\n    setShowName(!showName);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: name,\n    value: name,\n    className: \"name-input\",\n    style: {\n      display: showName ? 'none' : 'flex'\n    },\n    placeholder: \"Anonymous\",\n    onChange: e => setName(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') props.onSave(name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), showName && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, name), React.createElement(\"button\", {\n    onClick: () => {\n      if (name) {\n        props.onSave(name);\n        setShowName(!showName);\n      }\n    },\n    className: \"name-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, showName ? React.createElement(FiUserCheck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : React.createElement(FiSave, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n}\n\nexport default NamePicker;","map":{"version":3,"sources":["/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/namePicker.js"],"names":["React","useState","FiUser","FiUserCheck","FiSave","NamePicker","props","name","setName","showName","setShowName","inputEl","save","current","focus","onSave","display","e","target","value","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,MAA9B,QAA4C,gBAA5C;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB;AAAE;AAAkD;;AAD7B,oBAECL,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAEhBM,IAFgB;AAAA,QAEVC,OAFU;;AAAA,qBAGSP,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,QAGhBQ,QAHgB;AAAA,QAGNC,WAHM;;AAIvB,QAAMC,OAAO,GACb;AAAE;AAAF,GADA;;AAGA,WAASC,IAAT,GAAe;AACXD,IAAAA,OAAO,CAACE,OAAR,CAAgBC,KAAhB;;AACA,QAAGP,IAAI,IAAI,CAACE,QAAZ,EAAsB;AAClBH,MAAAA,KAAK,CAACS,MAAN,CAAaR,IAAb;AACH;;AACDG,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;;AAED,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAO,IAAA,KAAK,EAAEF,IAAd;AACI,IAAA,KAAK,EAAEA,IADX;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAEP,QAAQ,GAAG,MAAH,GAAY;AAA9B,KAHX;AAII,IAAA,WAAW,EAAC,WAJhB;AAKI,IAAA,QAAQ,EAAEQ,CAAC,IAAGT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CALzB;AAMI,IAAA,UAAU,EAAEF,CAAC,IAAG;AACZ,UAAGA,CAAC,CAACG,GAAF,KAAQ,OAAX,EAAoBd,KAAK,CAACS,MAAN,CAAaR,IAAb;AACvB,KARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAYFE,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,IAAN,CAZV,EAcH;AAAQ,IAAA,OAAO,EAAE,MAAK;AAClB,UAAGA,IAAH,EAAS;AACLD,QAAAA,KAAK,CAACS,MAAN,CAAaR,IAAb;AACAG,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH;AACJ,KALD;AAMI,IAAA,SAAS,EAAC,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKA,QAAQ,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPlC,CAdG,CAAP;AAyBH;;AAED,eAAeJ,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport { FiUser, FiUserCheck, FiSave } from \"react-icons/fi\";\n\nfunction NamePicker(props) {\n    { /* function useState() requires an import line */}\n    const [name, setName] = useState('')\n    const [showName, setShowName] = useState(false)\n    const inputEl = \n    { /* we this to false because you want to show the state only when there's an input */ }\n    \n    function save(){\n        inputEl.current.focus()\n        if(name && !showName) {\n            props.onSave(name)\n        }\n        setShowName(!showName)\n    }\n\n    return <div>\n        <input value={name}\n            value={name}\n            className=\"name-input\"\n            style={{display: showName ? 'none' : 'flex'}}\n            placeholder=\"Anonymous\"\n            onChange={e=> setName(e.target.value)}\n            onKeyPress={e=> {\n                if(e.key==='Enter') props.onSave(name)\n            }}\n            />\n        \n        {showName && <div>{name}</div>}\n\n        <button onClick={()=> {\n            if(name) {\n                props.onSave(name)\n                setShowName(!showName)\n            }\n        }}\n            className=\"name-button\">\n            {showName ? <FiUserCheck /> : <FiSave />}\n        \n        </button>\n    </div>\n}\n\nexport default NamePicker"]},"metadata":{},"sourceType":"module"}