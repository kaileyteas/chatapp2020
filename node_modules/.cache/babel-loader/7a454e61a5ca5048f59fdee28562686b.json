{"ast":null,"code":"import _slicedToArray from \"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { db, useDB } from './db';\nimport NamePicker from './namePicker';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { FiSend, FiCamera } from 'react-icons/fi';\nimport Camera from 'react-snap-pic';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nfunction App() {\n  {\n    /* This redirects the user to a localhost page called 'home' */\n  }\n  useEffect(() => {\n    const pathname = window.location.pathname;\n    if (pathname.length < 2) window.location.pathname = 'home';\n  }, []);\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/:room\",\n    component: Room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nfunction Room(props) {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  // const [messages, setMessages] = useState([])\n  const room = props.match.params.room;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showCamera = _useState4[0],\n        setShowCamera = _useState4[1];\n\n  const messages = useDB(room);\n  /** This is a asynchronous method, meaning that it will wait until prompted\n   *  You can use the wait method with async functions, but without declaring async,\n   *  it will not work.\n   */\n\n  async function takePicture(img) {\n    setShowCamera(false);\n    const imgID = Math.random().toString(36).substring(7);\n    var storageRef = firebase.storage().ref();\n    var ref = storageRef.child(imgID + '.jpg');\n    await ref.putString(img, 'data_url');\n    db.send({\n      img: imgID,\n      name,\n      ts: new Date(),\n      room\n    });\n  }\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, showCamera && React.createElement(Camera, {\n    takePicture: takePicture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"header\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\",\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), \"Fresh memes\", React.createElement(NamePicker, {\n    onSave: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, messages.map((m, i) => {})), React.createElement(TextInput, {\n    showCamera: () => setShowCamera(true),\n    onSend: text => {\n      db.send({\n        text,\n        name,\n        ts: new Date(),\n        room\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}\n\nconst bucket = 'https://firebasestorage.googleapis.com/v0/b/chatter20202020.appspot.com/o/';\nconst suffix = '.jpg?alt=media';\n\nfunction Message() {\n  return React.createElement(\"div\", {\n    key: i,\n    className: \"message-wrap\",\n    from: m.name === name ? 'me' : 'you',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"onClick=\", () => console.log(m), \">\", React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"msg-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, m.name), React.createElement(\"div\", {\n    className: \"msg-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, m.text)));\n}\n\nfunction TextInput(props) {\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        text = _useState6[0],\n        setText = _useState6[1];\n\n  return React.createElement(\"div\", {\n    className: \"text-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: props.showCamera,\n    style: {\n      left: 10,\n      right: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(FiCamera, {\n    style: {\n      height: 15,\n      width: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    value: text,\n    className: \"text-input\",\n    placeholder: \"Enter text\",\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        if (text) props.onSend(text);\n        setText('');\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      props.onSend(text);\n      setText('');\n    },\n    className: \"button\",\n    disabled: !text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\\u2191\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/src/App.js"],"names":["React","useState","useEffect","db","useDB","NamePicker","BrowserRouter","Route","FiSend","FiCamera","Camera","firebase","App","pathname","window","location","length","Room","props","room","match","params","name","setName","showCamera","setShowCamera","messages","takePicture","img","imgID","Math","random","toString","substring","storageRef","storage","ref","child","putString","send","ts","Date","map","m","i","text","bucket","suffix","Message","console","log","TextInput","setText","left","right","height","width","e","target","value","key","onSend"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { db, useDB } from './db'\nimport NamePicker from './namePicker'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { FiSend, FiCamera } from 'react-icons/fi'\nimport Camera from 'react-snap-pic'\nimport * as firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nfunction App(){\n  {/* This redirects the user to a localhost page called 'home' */}\n  useEffect(()=>{\n    const {pathname} = window.location\n    if(pathname.length<2) window.location.pathname='home'\n  },[])\n\n  return <BrowserRouter>\n    <Route path=\"/:room\" component={Room}/>\n  </BrowserRouter>\n}\n\nfunction Room(props) {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  // const [messages, setMessages] = useState([])\n  const {room} = props.match.params\n  const [name, setName] = useState('')\n  const [showCamera, setShowCamera] = useState(false)\n  const messages = useDB(room)\n\n  /** This is a asynchronous method, meaning that it will wait until prompted\n   *  You can use the wait method with async functions, but without declaring async,\n   *  it will not work.\n   */\n  async function takePicture(img) {\n    setShowCamera(false)\n    const imgID = Math.random().toString(36).substring(7)\n    var storageRef = firebase.storage().ref()\n    var ref = storageRef.child(imgID + '.jpg')\n    await ref.putString(img, 'data_url')\n    db.send({ img: imgID, name, ts: new Date(), room })\n  }\n\n  return <main>\n    \n    {showCamera && <Camera takePicture={takePicture} />}\n\n    <header className=\"header\"> \n      <div className=\"logo-wrap\">\n        <img src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\" \n        className=\"logo\"\n        />\n      </div>\n      Fresh memes\n      <NamePicker onSave = {setName}/>\n    </header>\n    \n    {/* returning HTML for a new message that is being sent to the chat */}\n    <div className=\"messages\">\n      {messages.map((m,i)=>{\n        \n      })}\n    </div>\n\n    {/* messages -- the text we send to textinput*/}\n    {/* the ... implies that we will append all new messages to the beginning of the list */}\n    <TextInput \n      showCamera={()=>setShowCamera(true)}\n      onSend={(text)=>{\n        db.send({\n          text, name, ts: new Date(), room\n      })\n    }}/>\n\n  </main>\n}\n\nconst bucket = 'https://firebasestorage.googleapis.com/v0/b/chatter20202020.appspot.com/o/'\nconst suffix = '.jpg?alt=media'\n\nfunction Message(){\n  return <div key={i} className=\"message-wrap\"\n    from={m.name===name?'me':'you'}>onClick={()=>console.log(m)}>\n    <div className=\"message\">\n      <div className=\"msg-name\">{m.name}</div>\n      <div className=\"msg-text\">{m.text}</div>\n    </div>\n  </div>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  return <div className=\"text-input-wrap\">\n    <button onClick={props.showCamera}\n      style={{left:10, right:'auto'}}>\n      <FiCamera style={{height:15, width:15}} />\n    </button>\n    <input \n      value={text}\n      className=\"text-input\"\n      placeholder=\"Enter text\"\n      onChange={e=> setText(e.target.value)}\n      onKeyPress={e=> {\n        if(e.key==='Enter') {\n          if(text) props.onSend(text)\n          setText('')\n        }\n      }}\n    />\n    <button onClick={()=> {\n      props.onSend(text)\n      setText('')\n      }}\n      className=\"button\"\n      disabled={!text}\n    >\n    ↑\n    </button>\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}