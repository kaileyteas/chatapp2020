{"ast":null,"code":"import _slicedToArray from \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { db, useDB } from './db';\nimport NamePicker from './namePicker';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nfunction App() {\n  {\n    /* This redirects the user to a localhost page called 'home' */\n  }\n  useEffect(() => {\n    const pathname = window.location.pathname;\n    if (pathname.length < 2) window.location.pathname = 'home';\n  }, []);\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/:room\",\n    component: Room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nfunction Room(props) {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  // const [messages, setMessages] = useState([])\n  const room = props.match.ap.room;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const messages = useDB();\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"logo-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\",\n    className: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), \"Fresh memes\", React.createElement(NamePicker, {\n    onSave: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    classname: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, messages.map((m, i) => {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"message-wrap\",\n      from: m.name === name ? 'me' : 'you',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ClassName: \"msg-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, m.name), React.createElement(\"div\", {\n      className: \"msg-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \", m.text)));\n  })), React.createElement(TextInput, {\n    onSend: text => {\n      db.send({\n        text,\n        name,\n        ts: new Date()\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }));\n}\n\nfunction TextInput(props) {\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        text = _useState4[0],\n        setText = _useState4[1];\n\n  return React.createElement(\"div\", {\n    className: \"text-input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: text,\n    className: \"text-input\",\n    placeholder: \"Enter text\",\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      props.onSend(text);\n      setText('');\n    },\n    className: \"button\",\n    disabled: !text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\u2191\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/App.js"],"names":["React","useState","useEffect","db","useDB","NamePicker","BrowserRouter","Route","App","pathname","window","location","length","Room","props","room","match","ap","name","setName","messages","map","m","i","text","send","ts","Date","TextInput","setText","e","target","value","onSend"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { db, useDB } from './db'\nimport NamePicker from './namePicker'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nfunction App(){\n  {/* This redirects the user to a localhost page called 'home' */}\n  useEffect(()=>{\n    const {pathname} = window.location\n    if(pathname.length<2) window.location.pathname='home'\n  },[])\n\n  return <BrowserRouter>\n    <Route path=\"/:room\" component={Room}/>\n  </BrowserRouter>\n}\n\nfunction Room(props) {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  // const [messages, setMessages] = useState([])\n  const {room} = props.match.ap\n  const [name, setName] = useState('')\n  const messages = useDB()\n\n  return <main>\n    \n    <header className=\"header\"> \n      <div className=\"logo-wrap\">\n        <img src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\" \n        className=\"logo\"\n        />\n      </div>\n      Fresh memes\n      <NamePicker onSave = {setName}/>\n    </header>\n    {/* returning HTML for a new message that is being sent to the chat */}\n    <div classname=\"messages\">\n      {messages.map((m,i)=>{\n        return <div key={i} className=\"message-wrap\"\n          from={m.name===name?'me':'you'}>\n            <div className=\"message\">\n              <div ClassName=\"msg-name\">{m.name}</div>\n                <div className=\"msg-text\"> {m.text}</div>\n            </div>\n        </div>\n      })}\n    </div>\n\n    {/* messages -- the text we send to textinput*/}\n    {/* the ... implies that we will append all new messages to the beginning of the list */}\n    <TextInput onSend={(text)=>{\n      db.send({\n        text, name, ts: new Date()\n      })\n    }}/>\n\n  </main>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  return <div className=\"text-input-wrap\">\n    <input \n      value={text}\n      className=\"text-input\"\n      placeholder=\"Enter text\"\n      onChange={e=> setText(e.target.value)}\n    />\n    <button onClick={()=> {\n      props.onSend(text)\n      setText('')\n      }}\n      className=\"button\"\n      disabled={!text}\n    >\n    â†‘\n    </button>\n\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}