{"ast":null,"code":"import _slicedToArray from \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/namePicker.js\";\nimport React, { useState } from 'react';\nimport { FiUser, FiUserCheck, FiSave } from \"react-icons/fi\";\n\nfunction NamePicker(props) {\n  {\n    /* function useState() requires an import line */\n  }\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showName = _useState4[0],\n        setShowName = _useState4[1];\n\n  {\n    /* we this to false because you want to show the state only when there's an input */\n  }\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, !showName && React.createElement(\"input\", {\n    value: name,\n    value: name,\n    className: \"name-input\",\n    placeholder: \"Anonymous\",\n    onChange: e => setName(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') props.onSave(name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      if (name) {\n        props.onSave(name);\n        setShowName(true);\n      }\n    },\n    className: \"name-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, showName ? React.createElement(FiUserCheck, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : React.createElement(FiSave, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), \">\", React.createElement(FiUser, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n}\n\nexport default NamePicker;","map":{"version":3,"sources":["/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/namePicker.js"],"names":["React","useState","FiUser","FiUserCheck","FiSave","NamePicker","props","name","setName","showName","setShowName","e","target","value","key","onSave"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,MAA9B,QAA4C,gBAA5C;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB;AAAE;AAAkD;;AAD7B,oBAECL,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAEhBM,IAFgB;AAAA,QAEVC,OAFU;;AAAA,qBAGSP,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,QAGhBQ,QAHgB;AAAA,QAGNC,WAHM;;AAIvB;AAAE;AAAsF;AAExF,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,CAACD,QAAD,IAAa;AAAO,IAAA,KAAK,EAAEF,IAAd;AACV,IAAA,KAAK,EAAEA,IADG;AAEV,IAAA,SAAS,EAAC,YAFA;AAGV,IAAA,WAAW,EAAC,WAHF;AAIV,IAAA,QAAQ,EAAEI,CAAC,IAAGH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAJX;AAKV,IAAA,UAAU,EAAEF,CAAC,IAAG;AACZ,UAAGA,CAAC,CAACG,GAAF,KAAQ,OAAX,EAAoBR,KAAK,CAACS,MAAN,CAAaR,IAAb;AACvB,KAPS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAWH;AAAQ,IAAA,OAAO,EAAE,MAAK;AAClB,UAAGA,IAAH,EAAS;AACLD,QAAAA,KAAK,CAACS,MAAN,CAAaR,IAAb;AACAG,QAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,KALD;AAMI,IAAA,SAAS,EAAC,aANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKD,QAAQ,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPlC,OASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAXG,CAAP;AAuBH;;AAED,eAAeJ,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport { FiUser, FiUserCheck, FiSave } from \"react-icons/fi\";\n\nfunction NamePicker(props) {\n    { /* function useState() requires an import line */}\n    const [name, setName] = useState('')\n    const [showName, setShowName] = useState(false)\n    { /* we this to false because you want to show the state only when there's an input */ }\n\n    return <div>\n        {!showName && <input value={name}\n            value={name}\n            className=\"name-input\"\n            placeholder=\"Anonymous\"\n            onChange={e=> setName(e.target.value)}\n            onKeyPress={e=> {\n                if(e.key==='Enter') props.onSave(name)\n            }}\n        />}\n\n        <button onClick={()=> {\n            if(name) {\n                props.onSave(name)\n                setShowName(true)\n            }\n        }}\n            className=\"name-button\">\n            {showName ? <FiUserCheck /> : <FiSave />}\n        >\n            <FiUser />\n        </button>\n    </div>\n}\n\nexport default NamePicker"]},"metadata":{},"sourceType":"module"}