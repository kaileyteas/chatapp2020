{"ast":null,"code":"import _slicedToArray from\"/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'./App.css';import{db,useDB}from'./db';import NamePicker from'./namePicker';import{BrowserRouter,Route}from'react-router-dom';function App(){{/* This redirects the user to a localhost page called 'home' */}useEffect(function(){var pathname=window.location.pathname;if(pathname.length<2)window.location.pathname='home';},[]);return React.createElement(BrowserRouter,null,React.createElement(Route,{path:\"/:room\",component:Room}));}function Room(props){// in usestate, we set messages to an empty array to show messages\n// while setMesages is a function\n// const [messages, setMessages] = useState([])\nvar room=props.match.params.room;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var messages=useDB(room);return React.createElement(\"main\",null,React.createElement(\"header\",{className:\"header\"},React.createElement(\"div\",{className:\"logo-wrap\"},React.createElement(\"img\",{src:\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\",className:\"logo\"})),\"Fresh memes\",React.createElement(NamePicker,{onSave:setName})),React.createElement(\"div\",{className:\"messages\"},messages.map(function(m,i){return React.createElement(\"div\",{key:i,className:\"message-wrap\",from:m.name===name?'me':'you'},React.createElement(\"div\",{className:\"message\"},React.createElement(\"div\",{className:\"msg-name\"},m.name),React.createElement(\"div\",{className:\"msg-text\"},m.text)));})),React.createElement(TextInput,{onSend:function onSend(text){db.send({text:text,name:name,ts:new Date(),room:room});}}));}function TextInput(props){var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];return React.createElement(\"div\",{className:\"text-input-wrap\"},React.createElement(\"input\",{value:text,className:\"text-input\",placeholder:\"Enter text\",onChange:function onChange(e){return setText(e.target.value);},onKeyPress:function onKeyPress(e){if(e.key==='Enter'){if(text)props.onSend(text);setText('');}}}),React.createElement(\"button\",{onClick:function onClick(){props.onSend(text);setText('');},className:\"button\",disabled:!text},\"\\u2191\"));}export default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/HCDE 438/ChatApp/chatapp/src/App.js"],"names":["React","useState","useEffect","db","useDB","NamePicker","BrowserRouter","Route","App","pathname","window","location","length","Room","props","room","match","params","name","setName","messages","map","m","i","text","send","ts","Date","TextInput","setText","e","target","value","key","onSend"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,WAAP,CACA,OAASC,EAAT,CAAaC,KAAb,KAA0B,MAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,aAAT,CAAwBC,KAAxB,KAAqC,kBAArC,CAEA,QAASC,CAAAA,GAAT,EAAc,CACZ,CAAC,+DAAgE,CACjEN,SAAS,CAAC,UAAI,IACLO,CAAAA,QADK,CACOC,MAAM,CAACC,QADd,CACLF,QADK,CAEZ,GAAGA,QAAQ,CAACG,MAAT,CAAgB,CAAnB,CAAsBF,MAAM,CAACC,QAAP,CAAgBF,QAAhB,CAAyB,MAAzB,CACvB,CAHQ,CAGP,EAHO,CAAT,CAKA,MAAO,qBAAC,aAAD,MACL,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,SAAS,CAAEI,IAAhC,EADK,CAAP,CAGD,CAED,QAASA,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CACnB;AACA;AACA;AAHmB,GAIZC,CAAAA,IAJY,CAIJD,KAAK,CAACE,KAAN,CAAYC,MAJR,CAIZF,IAJY,eAKKd,QAAQ,CAAC,EAAD,CALb,wCAKZiB,IALY,eAKNC,OALM,eAMnB,GAAMC,CAAAA,QAAQ,CAAGhB,KAAK,CAACW,IAAD,CAAtB,CAEA,MAAO,iCAEL,8BAAQ,SAAS,CAAC,QAAlB,EACE,2BAAK,SAAS,CAAC,WAAf,EACE,2BAAK,GAAG,CAAC,gEAAT,CACA,SAAS,CAAC,MADV,EADF,CADF,eAOE,oBAAC,UAAD,EAAY,MAAM,CAAII,OAAtB,EAPF,CAFK,CAaL,2BAAK,SAAS,CAAC,UAAf,EACGC,QAAQ,CAACC,GAAT,CAAa,SAACC,CAAD,CAAGC,CAAH,CAAO,CACnB,MAAO,4BAAK,GAAG,CAAEA,CAAV,CAAa,SAAS,CAAC,cAAvB,CACL,IAAI,CAAED,CAAC,CAACJ,IAAF,GAASA,IAAT,CAAc,IAAd,CAAmB,KADpB,EAEL,2BAAK,SAAS,CAAC,SAAf,EACE,2BAAK,SAAS,CAAC,UAAf,EAA2BI,CAAC,CAACJ,IAA7B,CADF,CAEE,2BAAK,SAAS,CAAC,UAAf,EAA2BI,CAAC,CAACE,IAA7B,CAFF,CAFK,CAAP,CAOD,CARA,CADH,CAbK,CA2BL,oBAAC,SAAD,EAAW,MAAM,CAAE,gBAACA,IAAD,CAAQ,CACzBrB,EAAE,CAACsB,IAAH,CAAQ,CACND,IAAI,CAAJA,IADM,CACAN,IAAI,CAAJA,IADA,CACMQ,EAAE,CAAE,GAAIC,CAAAA,IAAJ,EADV,CACsBZ,IAAI,CAAJA,IADtB,CAAR,EAGD,CAJD,EA3BK,CAAP,CAkCD,CAED,QAASa,CAAAA,SAAT,CAAmBd,KAAnB,CAAyB,gBACCb,QAAQ,CAAC,EAAD,CADT,yCAChBuB,IADgB,eACVK,OADU,eAGvB,MAAO,4BAAK,SAAS,CAAC,iBAAf,EACL,6BACE,KAAK,CAAEL,IADT,CAEE,SAAS,CAAC,YAFZ,CAGE,WAAW,CAAC,YAHd,CAIE,QAAQ,CAAE,kBAAAM,CAAC,QAAGD,CAAAA,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,EAJb,CAKE,UAAU,CAAE,oBAAAF,CAAC,CAAG,CACd,GAAGA,CAAC,CAACG,GAAF,GAAQ,OAAX,CAAoB,CAClB,GAAGT,IAAH,CAASV,KAAK,CAACoB,MAAN,CAAaV,IAAb,EACTK,OAAO,CAAC,EAAD,CAAP,CACD,CACF,CAVH,EADK,CAaL,8BAAQ,OAAO,CAAE,kBAAK,CACpBf,KAAK,CAACoB,MAAN,CAAaV,IAAb,EACAK,OAAO,CAAC,EAAD,CAAP,CACC,CAHH,CAIE,SAAS,CAAC,QAJZ,CAKE,QAAQ,CAAE,CAACL,IALb,WAbK,CAAP,CAwBD,CAED,cAAehB,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { db, useDB } from './db'\nimport NamePicker from './namePicker'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nfunction App(){\n  {/* This redirects the user to a localhost page called 'home' */}\n  useEffect(()=>{\n    const {pathname} = window.location\n    if(pathname.length<2) window.location.pathname='home'\n  },[])\n\n  return <BrowserRouter>\n    <Route path=\"/:room\" component={Room}/>\n  </BrowserRouter>\n}\n\nfunction Room(props) {\n  // in usestate, we set messages to an empty array to show messages\n  // while setMesages is a function\n  // const [messages, setMessages] = useState([])\n  const {room} = props.match.params\n  const [name, setName] = useState('')\n  const messages = useDB(room)\n\n  return <main>\n    \n    <header className=\"header\"> \n      <div className=\"logo-wrap\">\n        <img src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c541.png\" \n        className=\"logo\"\n        />\n      </div>\n      Fresh memes\n      <NamePicker onSave = {setName}/>\n    </header>\n    \n    {/* returning HTML for a new message that is being sent to the chat */}\n    <div className=\"messages\">\n      {messages.map((m,i)=>{\n        return <div key={i} className=\"message-wrap\"\n          from={m.name===name?'me':'you'}>\n          <div className=\"message\">\n            <div className=\"msg-name\">{m.name}</div>\n            <div className=\"msg-text\">{m.text}</div>\n          </div>\n        </div>\n      })}\n    </div>\n\n    {/* messages -- the text we send to textinput*/}\n    {/* the ... implies that we will append all new messages to the beginning of the list */}\n    <TextInput onSend={(text)=>{\n      db.send({\n        text, name, ts: new Date(), room\n      })\n    }}/>\n\n  </main>\n}\n\nfunction TextInput(props){\n  const [text, setText] = useState('')\n\n  return <div className=\"text-input-wrap\">\n    <input \n      value={text}\n      className=\"text-input\"\n      placeholder=\"Enter text\"\n      onChange={e=> setText(e.target.value)}\n      onKeyPress={e=> {\n        if(e.key==='Enter') {\n          if(text) props.onSend(text)\n          setText('')\n        }\n      }}\n    />\n    <button onClick={()=> {\n      props.onSend(text)\n      setText('')\n      }}\n      className=\"button\"\n      disabled={!text}\n    >\n    â†‘\n    </button>\n\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}