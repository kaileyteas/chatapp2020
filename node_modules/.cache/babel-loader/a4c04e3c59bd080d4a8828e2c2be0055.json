{"ast":null,"code":"import _objectSpread from\"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import*as firebase from\"firebase/app\";import\"firebase/firestore\";import\"firebase/storage\";var store;var coll='messages';function useDB(room){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];function add(m){setMessages(function(current){var msgs=[m].concat(_toConsumableArray(current));msgs.sort(function(a,b){return b.ts.seconds-a.ts.seconds;});return msgs;});}function remove(id){setMessages(function(current){return current.filter(function(m){return m.id!==id;});});}useEffect(function(){store.collection(coll).where('room','==',room).onSnapshot(function(snap){return snap.docChanges().forEach(function(c){var doc=c.doc,type=c.type;if(type==='added')add(_objectSpread({},doc.data(),{id:doc.id}));if(type==='removed')remove(doc.id);});});},[]);return messages;}var db={};db.send=function(msg){return store.collection(coll).add(msg);};db.delete=function(id){return store.collection(coll).doc(id).delete();};export{db,useDB};var firebaseConfig={apiKey:\"AIzaSyC37_Lo0EODqLfGtxg7v1FDHbgHUSBa0no\",authDomain:\"chatroom-e34eb.firebaseapp.com\",databaseURL:\"https://chatroom-e34eb.firebaseio.com\",projectId:\"chatroom-e34eb\",storageBucket:\"chatroom-e34eb.appspot.com\",messagingSenderId:\"86918280767\",appId:\"1:86918280767:web:8cd5ba999c6a251e76aa8a\"};firebase.initializeApp(firebaseConfig);store=firebase.firestore();","map":{"version":3,"sources":["/Users/kale/Desktop/school/Spring Quarter '20/HCDE 438/ChatApp/chatapp/src/db.js"],"names":["useState","useEffect","firebase","store","coll","useDB","room","messages","setMessages","add","m","current","msgs","sort","a","b","ts","seconds","remove","id","filter","collection","where","onSnapshot","snap","docChanges","forEach","c","doc","type","data","db","send","msg","delete","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","firestore"],"mappings":"kdAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,cAA1B,CACA,MAAO,oBAAP,CACA,MAAO,kBAAP,CAEA,GAAIC,CAAAA,KAAJ,CACA,GAAMC,CAAAA,IAAI,CAAG,UAAb,CAEA,QAASC,CAAAA,KAAT,CAAeC,IAAf,CAAqB,eACeN,QAAQ,CAAC,EAAD,CADvB,wCACVO,QADU,eACAC,WADA,eAEjB,QAASC,CAAAA,GAAT,CAAaC,CAAb,CAAgB,CACZF,WAAW,CAAC,SAAAG,OAAO,CAAI,CACnB,GAAMC,CAAAA,IAAI,EAAIF,CAAJ,4BAAUC,OAAV,EAAV,CACAC,IAAI,CAACC,IAAL,CAAU,SAACC,CAAD,CAAGC,CAAH,QAAQA,CAAAA,CAAC,CAACC,EAAF,CAAKC,OAAL,CAAeH,CAAC,CAACE,EAAF,CAAKC,OAA5B,EAAV,EACA,MAAOL,CAAAA,IAAP,CACH,CAJU,CAAX,CAKH,CACD,QAASM,CAAAA,MAAT,CAAgBC,EAAhB,CAAoB,CAChBX,WAAW,CAAC,SAAAG,OAAO,QAAGA,CAAAA,OAAO,CAACS,MAAR,CAAe,SAAAV,CAAC,QAAGA,CAAAA,CAAC,CAACS,EAAF,GAAOA,EAAV,EAAhB,CAAH,EAAR,CAAX,CACH,CAEDlB,SAAS,CAAC,UAAM,CACZE,KAAK,CAACkB,UAAN,CAAiBjB,IAAjB,EACCkB,KADD,CACO,MADP,CACc,IADd,CACmBhB,IADnB,EAECiB,UAFD,CAEY,SAAAC,IAAI,QAAGA,CAAAA,IAAI,CAACC,UAAL,GAAkBC,OAAlB,CAA0B,SAAAC,CAAC,CAAG,IACtCC,CAAAA,GADsC,CACzBD,CADyB,CACtCC,GADsC,CACjCC,IADiC,CACzBF,CADyB,CACjCE,IADiC,CAE7C,GAAIA,IAAI,GAAG,OAAX,CAAoBpB,GAAG,kBAAKmB,GAAG,CAACE,IAAJ,EAAL,EAAgBX,EAAE,CAACS,GAAG,CAACT,EAAvB,GAAH,CACpB,GAAIU,IAAI,GAAG,SAAX,CAAsBX,MAAM,CAACU,GAAG,CAACT,EAAL,CAAN,CACzB,CAJkB,CAAH,EAFhB,EAOH,CARQ,CAQN,EARM,CAAT,CASA,MAAOZ,CAAAA,QAAP,CACH,CAED,GAAMwB,CAAAA,EAAE,CAAG,EAAX,CACAA,EAAE,CAACC,IAAH,CAAU,SAASC,GAAT,CAAc,CACpB,MAAO9B,CAAAA,KAAK,CAACkB,UAAN,CAAiBjB,IAAjB,EAAuBK,GAAvB,CAA2BwB,GAA3B,CAAP,CACH,CAFD,CAGAF,EAAE,CAACG,MAAH,CAAY,SAASf,EAAT,CAAa,CACrB,MAAOhB,CAAAA,KAAK,CAACkB,UAAN,CAAiBjB,IAAjB,EAAuBwB,GAAvB,CAA2BT,EAA3B,EAA+Be,MAA/B,EAAP,CACH,CAFD,CAIA,OAASH,EAAT,CAAa1B,KAAb,EAEA,GAAM8B,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,yCADW,CAEnBC,UAAU,CAAE,gCAFO,CAGnBC,WAAW,CAAE,uCAHM,CAInBC,SAAS,CAAE,gBAJQ,CAKnBC,aAAa,CAAE,4BALI,CAMnBC,iBAAiB,CAAE,aANA,CAOnBC,KAAK,CAAE,0CAPY,CAAvB,CAUAxC,QAAQ,CAACyC,aAAT,CAAuBR,cAAvB,EACAhC,KAAK,CAAGD,QAAQ,CAAC0C,SAAT,EAAR","sourcesContent":["import {useState, useEffect} from 'react'\nimport * as firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/storage\"\n\nlet store\nconst coll = 'messages'\n\nfunction useDB(room) {\n    const [messages, setMessages] = useState([])\n    function add(m) {\n        setMessages(current => {\n            const msgs = [m, ...current]\n            msgs.sort((a,b)=> b.ts.seconds - a.ts.seconds)\n            return msgs\n        })\n    }\n    function remove(id) {\n        setMessages(current=> current.filter(m=> m.id!==id))\n    }\n\n    useEffect(() => {\n        store.collection(coll)\n        .where('room','==',room)\n        .onSnapshot(snap=> snap.docChanges().forEach(c=> {\n            const {doc, type} = c\n            if (type==='added') add({...doc.data(),id:doc.id})\n            if (type==='removed') remove(doc.id)\n        }))\n    }, [])\n    return messages\n}\n\nconst db = {}\ndb.send = function(msg) {\n    return store.collection(coll).add(msg)\n}\ndb.delete = function(id) {\n    return store.collection(coll).doc(id).delete()\n}\n\nexport { db, useDB }\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC37_Lo0EODqLfGtxg7v1FDHbgHUSBa0no\",\n    authDomain: \"chatroom-e34eb.firebaseapp.com\",\n    databaseURL: \"https://chatroom-e34eb.firebaseio.com\",\n    projectId: \"chatroom-e34eb\",\n    storageBucket: \"chatroom-e34eb.appspot.com\",\n    messagingSenderId: \"86918280767\",\n    appId: \"1:86918280767:web:8cd5ba999c6a251e76aa8a\"\n  };\n\nfirebase.initializeApp(firebaseConfig)\nstore = firebase.firestore()"]},"metadata":{},"sourceType":"module"}